name: Linting and Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    name: "[ALL] Clippy and Rustfmt"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Install dependencies
        run: |
          sudo apt-get install -y libpq-dev
      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
  test-core:
    name: "[CORE] Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: core/target
          key: ${{ runner.os }}-cargo-build-target-core-${{ hashFiles('**/Cargo.lock') }}
      - name: Run test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p gdlk
  test-api:
    name: "[API] Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build API image
        run: docker-compose -f docker-compose.ci.yml build api
      - name: Test API
        run: docker-compose -f docker-compose.ci.yml run api ./docker/run_tests.sh
  test-api-fast:
    name: "[API] Test (faster)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Install dependencies
        run: |
          sudo apt-get install -y libpq-dev
          cargo install diesel_cli --no-default-features --features=postgres
      - name: Start DB
        run: docker-compose -f docker-compose.ci.yml run -d db
      - name: Test API
        env:
          DATABASE_URL: postgres://root:root@localhost/gdlk
          RUST_BACKTRACE: 1
        run: cargo test -p gdlk_api
